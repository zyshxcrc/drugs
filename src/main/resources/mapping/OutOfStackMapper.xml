<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drugs.manage.mapper.OutOfStackMapper">

    <sql id="outOfStackColumnsList">
        <trim suffixOverrides=",">
            <if test="item.drugId != null">drugId,</if>
            <if test="item.drugCode != null">drugCode,</if>
            <if test="item.drugName != null">drugName,</if>
            <if test="item.drugModel != null">drugModel,</if>
            <if test="item.drugUnit != null">drugUnit,</if>
            <if test="item.unitPrice != null">unitPrice,</if>
            <if test="item.money != null">money,</if>
            <if test="item.drawNum != null">drawNum,</if>
            <if test="item.receiver != null">receiver,</if>
            <if test="item.drawTime != null">drawTime,</if>
            <if test="item.remarks != null">remarks</if>
        </trim>
    </sql>
    <sql id="outOfStackValuesList">
        <trim suffixOverrides=",">
            <if test="item.drugId != null">#{item.drugId},</if>
            <if test="item.drugCode != null">#{item.drugCode},</if>
            <if test="item.drugName != null">#{item.drugName},</if>
            <if test="item.drugModel != null">#{item.drugModel},</if>
            <if test="item.drugUnit != null">#{item.drugUnit},</if>
            <if test="item.unitPrice != null">#{item.unitPrice},</if>
            <if test="item.money != null">#{item.money},</if>
            <if test="item.drawNum != null">#{item.drawNum},</if>
            <if test="item.receiver != null">#{item.receiver},</if>
            <if test="item.drawTime != null">#{item.drawTime},</if>
            <if test="item.remarks != null">#{item.remarks}</if>
        </trim>
    </sql>

    <resultMap type="com.drugs.manage.entity.OutOfStackReceiver" id="OutOfStackResultMap">
        <id property="id" column="id"/>
        <result property="drugId" column="drugId"/>
        <result property="drugCode" column="drugCode"/>
        <result property="drugName" column="drugName"/>
        <result property="drugModel" column="drugModel"/>
        <result property="drugUnit" column="drugUnit"/>
        <result property="unitPrice" column="unitPrice"/>
        <result property="money" column="money"/>
        <result property="drawNum" column="drawNum"/>
        <result property="drawTime" column="drawTime"/>
        <result property="remarks" column="remarks"/>
        <association property="receiver" javaType="com.drugs.manage.entity.Receiver">
            <id property="id" column="c_id"/>
            <result property="receiverName" column="receiverName"/>
            <result property="phone" column="phone"/>
            <result property="address" column="address"/>
            <result property="createDate" column="createDate"/>
            <result property="remarks" column="c_remarks"/>
        </association>
    </resultMap>

    <select id="getOutOfStackList" parameterType="map" resultMap="OutOfStackResultMap">
        SELECT d.*,t.id c_id,t.receiverName,t.phone,t.address,t.createDate,t.remarks c_remarks
        FROM out_of_stock d, receiver_list t where d.receiver=t.id
        <if test="drugName!=null">
            and d.drugName like '%${drugName}%'
        </if>
        <if test="startDate!=null">
            and d.drawTime &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and d.drawTime &lt;= #{endDate}
        </if>
        order by id desc limit #{currIndex} , #{pageSize}
    </select>

    <select id="getOutOfStackCount" parameterType="String" resultType="Integer">
        select count(*) FROM out_of_stock d, receiver_list t where d.receiver=t.id
        <if test="drugName!=null">
            and d.drugName like '%${drugName}%'
        </if>
        <if test="startDate!=null">
            and d.drawTime &gt;= #{startDate}
        </if>
        <if test="endDate!=null">
            and d.drawTime &lt;= #{endDate}
        </if>
    </select>

    <insert id="batchInsert" parameterType="com.drugs.manage.entity.OutOfStack" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        <foreach item="item" index="index" collection="list" separator=";">
            insert into out_of_stock(<include refid="outOfStackColumnsList"/>)
            VALUES(<include refid="outOfStackValuesList"/>)
        </foreach>
    </insert>

    <select id="getOutOfStackById" resultMap="OutOfStackResultMap">
        SELECT d.*,t.id c_id,t.receiverName,t.phone,t.address,t.createDate,t.remarks c_remarks
        FROM out_of_stock d, receiver_list t where d.receiver=t.id and d.id=#{id}
    </select>

    <update id="updateById">
        update out_of_stock set  drugCode=#{drugCode},
        drugName=#{drugName}, drugModel=#{drugModel},
        drugUnit=#{drugUnit}, unitPrice=#{unitPrice},
        receiver=#{receiver}, drawNum=#{drawNum},
        money=#{money},
        drawTime=#{drawTime}, remarks=#{remarks}
        where id =#{id}
    </update>

    <delete id="deleteById">
        DELETE FROM out_of_stock WHERE id = #{id}
    </delete>
</mapper>