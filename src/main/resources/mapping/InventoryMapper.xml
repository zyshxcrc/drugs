<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.drugs.manage.mapper.InventoryMapper">

    <sql id="inventoryColumnsList">
        <trim suffixOverrides=",">
            <if test="item.drugCode != null">drugCode,</if>
            <if test="item.drugName != null">drugName,</if>
            <if test="item.drugModel != null">drugModel,</if>
            <if test="item.drugUnit != null">drugUnit,</if>
            <if test="item.warehouseNum != null">warehouseNum,</if>
            <if test="item.outgoingNum != null">outgoingNum,</if>
            <if test="item.inventoryNum != null">inventoryNum,</if>
            <if test="item.remarks != null">remarks</if>
        </trim>
    </sql>
    <sql id="inventoryValuesList">
        <trim suffixOverrides=",">
            <if test="item.drugCode != null">#{item.drugCode},</if>
            <if test="item.drugName != null">#{item.drugName},</if>
            <if test="item.drugModel != null">#{item.drugModel},</if>
            <if test="item.drugUnit != null">#{item.drugUnit},</if>
            <if test="item.warehouseNum != null">#{item.warehouseNum},</if>
            <if test="item.outgoingNum != null">#{item.outgoingNum},</if>
            <if test="item.inventoryNum != null">#{item.inventoryNum},</if>
            <if test="item.remarks != null">#{item.remarks}</if>
        </trim>
    </sql>

    <resultMap type="com.drugs.manage.entity.Inventory" id="InventoryResultMap">
        <id property="id" column="id"/>
        <result property="drugId" column="drugId"/>
        <result property="warehouseNum" column="warehouseNum"/>
        <result property="outgoingNum" column="outgoingNum"/>
        <result property="inventoryNum" column="inventoryNum"/>
        <result property="remarks" column="remarks"/>
        <association property="drug" javaType="com.drugs.manage.entity.Drug">
            <id property="id" column="c_id"/>
            <result property="drugCode" column="drugCode"/>
            <result property="drugName" column="drugName"/>
            <result property="drugModel" column="drugModel"/>
            <result property="drugUnit" column="drugUnit"/>
            <result property="unitPrice" column="unitPrice"/>
            <result property="createDate" column="createDate"/>
            <result property="remarks" column="remarks"/>
        </association>
    </resultMap>

    <resultMap id="allDrugsResultMap" type="com.drugs.manage.entity.Inventory">
        <id property="id" column="id" />
        <result property="drugCode" column="drugCode"/>
        <result property="drugName" column="drugName"/>
        <result property="drugModel" column="drugModel"/>
        <result property="drugUnit" column="drugUnit"/>
        <result property="unitPrice" column="unitPrice"/>
        <result property="warehouseNum" column="warehouseNum"/>
        <result property="outgoingNum" column="outgoingNum"/>
        <result property="inventoryNum" column="inventoryNum"/>
        <result property="remarks" column="remarks"/>
    </resultMap>

    <select id="getInventoryList" parameterType="map" resultMap="InventoryResultMap">
        SELECT a.id id,b.drugCode drugCode,b.drugName drugName,b.drugModel drugModel,b.drugUnit drugUnit,b.unitPrice unitPrice,
            a.warehouseNum warehouseNum,a.outgoingNum outgoingNum,a.inventoryNum inventoryNum,a.remarks remarks
        FROM inventory a,drugs b where a.drugId = b.id
        <if test="drugName!=null">
            and b.drugName like '%${drugName}%'
        </if>
        order by id desc
        limit #{currIndex} , #{pageSize}
    </select>

    <select id="getInventoryCount" parameterType="String" resultType="Integer">
        select count(*) FROM inventory a,drugs b where a.drugId = b.id
        <if test="drugName!=null">
            and b.drugName like '%${drugName}%'
        </if>
    </select>

    <select id="getInventoryByCode" resultType="com.drugs.manage.entity.Inventory">
        SELECT * FROM inventory where drugCode=#{drugCode}
    </select>

    <select id="getInventoryByDrugId" resultType="com.drugs.manage.entity.Inventory">
        SELECT * FROM inventory where drugId=#{drugId}
    </select>

    <insert id="batchInsert" parameterType="com.drugs.manage.entity.Inventory" keyColumn="id" keyProperty="id" useGeneratedKeys="true">
        <foreach item="item" index="index" collection="list" separator=";">
            insert into inventory(<include refid="inventoryColumnsList"/>)
            VALUES(<include refid="inventoryValuesList"/>)
        </foreach>
    </insert>

    <update id="updateInventory">
        update inventory set warehouseNum=#{warehouseNum}, inventoryNum=#{inventoryNum}
        where id =#{id}
    </update>

    <update id="updateInventoryOutgoing">
        update inventory set outgoingNum=#{outgoingNum}, inventoryNum=#{inventoryNum}
        where id =#{id}
    </update>

    <update id="batchUpdate">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update inventory
            <set>
                <if test="item.warehouseNum != null">warehouseNum=warehouseNum+#{item.warehouseNum},</if>
                <if test="item.outgoingNum != null">outgoingNum=outgoingNum+#{item.outgoingNum},</if>
                <if test="item.inventoryNum != null and item.warehouseNum != null">inventoryNum=inventoryNum+#{item.inventoryNum}</if>
                <if test="item.inventoryNum != null and item.outgoingNum != null">inventoryNum=inventoryNum-#{item.inventoryNum}</if>
            </set>
            where drugId = #{item.drugId}
        </foreach>
    </update>

    <update id="batchUpdateDelete">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
            update inventory
            <set>
                <if test="item.warehouseNum != null">warehouseNum=warehouseNum-#{item.warehouseNum},</if>
                <if test="item.inventoryNum != null">inventoryNum=inventoryNum-#{item.inventoryNum}</if>
            </set>
            where drugCode = #{item.drugCode}
        </foreach>
    </update>

    <insert id="insert">
        insert into inventory(drugId,warehouseNum,outgoingNum,inventoryNum,remarks)
        values(#{drugId},#{warehouseNum},#{outgoingNum},
        #{inventoryNum},#{remarks})
    </insert>
</mapper>